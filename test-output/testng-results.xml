<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-03T23:10:58Z" name="Cucumber_framework" finished-at="2020-11-03T23:11:32Z" duration-ms="34288">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2020-11-03T23:10:58Z" name="Test" finished-at="2020-11-03T23:11:32Z" duration-ms="34288">
      <class name="runners.RunCuke">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:10:58Z" name="setUpClass" finished-at="2020-11-03T23:10:59Z" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setup()[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:10:59Z" name="setup" finished-at="2020-11-03T23:10:59Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:10:59Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-03T23:11:05Z" duration-ms="6778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is not registered"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Logging in"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:11:05Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-03T23:11:10Z" duration-ms="4346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User enters wrong password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Logging in"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:11:10Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-03T23:11:14Z" duration-ms="4507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is registered and enters correct password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Logging in"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:11:14Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-03T23:11:20Z" duration-ms="5746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is not logged in username is unique"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:11:20Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-03T23:11:26Z" duration-ms="5812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is not logged in and username is not unique"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:11:26Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-03T23:11:31Z" duration-ms="5589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is not logged in and username is not reentered correctly"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.RunCuke@5bf0fe62]" started-at="2020-11-03T23:11:31Z" name="tearDownClass" finished-at="2020-11-03T23:11:32Z" duration-ms="906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.RunCuke -->
    </test> <!-- Test -->
  </suite> <!-- Cucumber_framework -->
</testng-results>
